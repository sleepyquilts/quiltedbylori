@charset "utf-8";
/*
        Project V4: Quilted by Lori
        Created by: Jennah Hubenak
        Date: June 9, 2019
        This file holds my styles for the website
*/

/*Main Styles */
html {
    font-family: serif;
    padding: 0px 20px 0px 20px;
}

/* Body Styles */

body {
    text-align: center;
    width: 100%;
    /*Sourced from https://uigradients.com/#windy */
    background-image: linear-gradient(#86fde8, #acb6e5);
}

body > header > img {
    width: 100%;
    height: auto;
    position: relative;
}

/*index page styles*/

article.index > h1 {
    padding: 20px 0px 0px 0px;
}

article.index > p {
    clear: left;
    text-align: justify;
    padding: 10px 40px 10px 40px;
}

article.index > p {
    border: 5px;
    border-color: #777777;
}

p#bertha {
    width: 40%;
    float: left;
    padding-left: 50px;
}

p#bertha > img {
    display: block;
    width: 50%
    
}
/* 
M8LO12 Demonstrate how to format media with CSS (CSS, group your media styles together and describe their overall impact on the media feature of your page)
For my video I wanted the video to sit alongside the picture displayed on my index and also I wanted the video to be no larger than 400px to keep the flow of the page really clean.*/
video {
    display: block;
    float: right;
    width: 400px;
    padding: 5px;
    margin: 40px 50px 5px 20px;
}

h2#linktogammill {
    display: inline-block;
    float: right;
    padding-right: 40px;
    padding-top: 30px;
}
/* Saved for use later
div.comments {
    text-align: justify;
    width: 40%;
    display: -webkit-flex;
    display: flex;
    flex-direction: column;
    padding-top: 40px;
    padding-right: 60px;
}

div#nicole {
    flex-basis: 100px;
    flex-grow: 1;
    flex-shrink: 1;
}

div#rhonda {
    flex-basis: 100px;
    flex-grow: 1;
    flex-shrink: 1;
}

div#darlene {
    flex-basis: 100px;
    flex-grow: 1;
    flex-shrink: 1;
}
*/

/* About Page Styles */
article.v4 > img{
    float: left;
    padding: 10px;
}

article.v4 > h1 {
    text-align: left;
    padding-top: 15px;
}

article.v4 > ul {
    list-style: none;
    text-align: left;
    padding: 10px;
}
/*M8LO10 Demonstrate a CSS animation or transition (CSS, identify which is being done and its impact on the rendered HTML; note it has to include a time aspect, not be immediate)
This effect on the html creates a blue background surrounding the image and gradually changes its color.*/
article.v4 > img {
    background: blue;
    transition: background 10s ease;
}

article.v3 > img {
    float: right;
    padding: 10px;
}

article.v3 > h1 {
    text-align: right;
    padding-top: 10px;
}

article.v3 > ul {
    list-style: none;
    text-align: right;
    padding: 10px;
}


article.v2 > img:hover {
    opacity: 0.3;
}

article.v2 > img {
    float: left;
    padding: 20px;
}

article.v2 > h1 {
    text-align: left;
    text-decoration: underline;
    padding-top: 10px;
}

article.v2 > ul {
    list-style: none;
    text-align: left;
    padding: 10px;
}


article.v1 > img {
    float: right;
    padding-left: 20px;
}

article.v1 > h1 {
    text-align: right;
}

article.v1 > ul {
    list-style: none;
    text-align: right;
}

/*Services Styles */

div.fees {
    list-style-type: none;
    text-align: left;
    padding: 20px 25px 20px 25px;

}

div.fees > dl > dt {
    font-size: 18px;
    text-decoration: underline;
    display: block;
    padding: 1em;
}

div.fees > dt > dd {
    text-align: justify;
    display: block;
}

/*Contact Styles */

div.contact {
    display: -webkit-flex;
    display: flex;
    flex-direction: row;
    width: 90%;
    padding: 10px 20px 10px 20px;
    align-self: center
}

div#grayson {
    width: 30%;
    padding: 20px 10px 20px 30px;
}

div#contact {
    width: 30%;
    padding: 20px 10px 20px 10px;
    align-self: center;
    font-weight: 600
}
/*M7LO11 Demonstrate how to format a form with CSS (group your form styles together in your CSS file, and document their overall impact on the form)
The overall impact of my css on the form was placing it inside a flexbox and making it a flex box. I also really wanted to be able to tweak and play with the fonts and alignments.  */
div#form {
    width: 30%;
    padding: 20px 10px 20px 10px;
    align-self: center
}

form#flex {
    display: flex;
    flex-direction: column;
    padding: 5px;
}

label#legend {
    font-style: italic;
    text-decoration: underline;
    font-weight: 900;
    text-align: center;
    padding: 2px;
}

label {
    text-align: left;
    font-weight: 500;
}

div#submit {
    padding: 5px;
}

h3.dropshadow {
    text-shadow: 2px 2px #cccccc;
}

/*div.contact {
    height: 325px;
}

div#grayson {
    float: left;
    padding: 20px 20px 20px 90px;
}

h3.dropshadow {
    text-shadow: 2px 2px #cccccc;
}

div#contact {
    position: relative;
    float: left;
    left: 150px;
    top: 75px;
    width: 300px;
    font-size: 25px;
} */

/* Gallery Styles */

/* M5LO3 Use media queries to format a page differently for phones vs. PCs. (CSS, note where these are in your CSS and describe the overall impact they have on the site)
I used the two media queries below to specify how the gallery page reacts depending on screen size. 
For the first query I have the gallery behaving as a flexbox displayed as a column where as on desktops it is a css grid with three columns and four rows. I wanted viewers to be able to see the images no matter how large their screen.*/

/*--------------------------------
    Media Styles: MaxWidth 500px
--------------------------------*/

@media screen and (max-width:500px) {

    img.banner {
        width: 100%;
        display: block;
    }

    nav > ul {
        list-style-type: none;
        background-color: #7bd5ff;
        width: 100%
    }

    /*M5LO7 Demonstrate use of properties of flexbox containers (CSS, document what flexbox container properties you use and their impacts, for one CSS selector using them)
The flexbox container is the gallery class and I chose the property flex-direction to display the items in a column.*/
    .gallery {
        display: -webkit-flex;
        display: flex;
        flex-direction: column;
    }

    #quilt1 {
        flex-basis: 300px;
        flex-shrink: 1;
        flex-grow: 1;
    }

    /*M5LO6 Demonstrate use of properties of flexbox items (CSS, document what flexbox item properties you use and their impacts, for one CSS selector using them) 
I chose to use the flex-basis of 300px for my images because the images are 300px and I chose 1 for the growth and shrink rates I wanted the image to be able to grow if needed but I didn't want it to shrink farther than its base 300px*/
    #quilt2 {
        flex-basis: 300px;
        flex-shrink: 1;
        flex-grow: 1;
    }

    #quilt3 {
        flex-basis: 300px;
        flex-shrink: 1;
        flex-grow: 1;
    }

    #quilt4 {
        flex-basis: 300px;
        flex-shrink: 1;
        flex-grow: 1;
    }

    #quilt5 {
        flex-basis: 300px;
        flex-shrink: 1;
        flex-grow: 1;
    }

    #quilt6 {
        flex-basis: 300px;
        flex-shrink: 1;
        flex-grow: 1;
    }

    #quilt7 {
        flex-basis: 300px;
        flex-shrink: 1;
        flex-grow: 1;
    }

    #quilt8 {
        flex-basis: 300px;
        flex-shrink: 1;
        flex-grow: 1;
    }

    #quilt9 {
        flex-basis: 300px;
        flex-shrink: 1;
        flex-grow: 1;
    }

    #quilt10 {
        flex-basis: 300px;
        flex-shrink: 1;
        flex-grow: 1;
    }

    #quilt11 {
        flex-basis: 300px;
        flex-shrink: 1;
        flex-grow: 1;
    }

    #quilt12 {
        flex-basis: 300px;
        flex-shrink: 1;
        flex-grow: 1;
    }

    h1#gallery {
        font-size: 1em;
        font-family: sans-serif;
        padding-top: 10px;
        word-wrap: normal;
    }
    
    footer {
        clear: both;
        background-color: #7bd5ff;
        text-align: center;
        word-wrap: normal;
        width: 95%;
    }
}

/*--------------------------------
    Media Styles: MinWidth 750px
--------------------------------*/

@media screen and (min-width:750px) {
    /* Navigation Styles */

    nav {
        width: 100%;
    }

    nav > ul > li {
        list-style-type: none;
        background-color: #7bd5ff;
        text-align: center;
        color: #b3393c;
    }

    nav > ul > li {
        display: block;
        float: left;
        width: 20%;
        padding: 10px 0px 10px 0px;
    }

    nav a:link,
    nav a:visited {
        color: hsl(280, 100%, 35%);
        display: block;
    }

    .gallery {
        display: grid;
        grid-template-columns: 1fr 1fr 1fr 1fr;
        grid-template-rows: 1fr 1fr 1fr 1fr;
        grid-gap: 5px;
        width: 80%;
        margin: 5px;
        padding-top: 30px;
        padding-left: 10px;
    }

    #quilt1 {
        grid-row: 1;
        grid-column: 1;
        width: 15%;
    }

    #quilt2 {
        grid-row: 1;
        grid-column: 2;
        width: 15%;
    }

    #quilt3 {
        grid-row: 1;
        grid-column: 3;
        width: 15%;
    }

    #quilt4 {
        grid-row: 2;
        grid-column: 1;
        width: 15%;
    }

    #quilt5 {
        grid-row: 2;
        grid-column: 2;
        width: 15%;
    }

    #quilt6 {
        grid-row: 2;
        grid-column: 3;
        width: 15%;
    }

    #quilt7 {
        grid-row: 3;
        grid-column: 1;
        width: 15%;
    }

    #quilt8 {
        grid-row: 3;
        grid-column: 2;
        width: 15%;
    }

    #quilt9 {
        grid-row: 3;
        grid-column: 3;
        width: 15%;
    }

    #quilt10 {
        grid-row: 1;
        grid-column: 4;
        width: 15%;
    }

    #quilt11 {
        grid-row: 2;
        grid-column: 4;
        width: 15%;
    }

    #quilt12 {
        grid-row: 3;
        grid-column: 4;
        width: 15%
    }

    h1#gallery {
        font-size: 1.5em;
        font-family: sans-serif;
        padding-top: 20px;
    }
    
    /*Footer Styles*/
    footer {
        clear: both;
        background-color: #7bd5ff;
        text-align: center;
        width: 95%;
        padding-right: 30px;
        padding-left: 30px;
    }

}

/* Table Styles */

/*M6LO7 Demonstrate how to format a table with CSS (CSS, group your table styles together and note the overall impact they have on the HTML)*/

table {
    width: 50%;
    padding: 20px 100px 10px 100px;
    margin-left: 300px;
    margin-right: 300px;
}

table > caption {
    caption-side: bottom;
    text-align: right;
    font-style: italic;
}

caption > a {
    color: crimson;
}

td.leftcol {
    text-align: left;
}

td.rightcol {
    text-align: right;
}



/*Heading Styles*/
h1.services {
    text-transform: uppercase;
    text-align: center;
    font-family: sans-serif;
}

/*Paragraph Styles */
article#aboutLori {
    text-align: justify;
}
